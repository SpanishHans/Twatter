services:
  frnt:
    build:
      context: ./frnt
      args:
        VERSION: ${VERSION}
    image: spanishhans/twatter_frnt:${VERSION}
    env_file: ./.env
    container_name: twatter_frnt
    ports:
      - "${FRNT_PORT}:3000"
    networks:
      - app_net
    depends_on:
      - pubs
      - ints

  auth:
    build:
      context: .
      dockerfile: ./auth/Dockerfile
      args:
        VERSION: ${VERSION}
    image: spanishhans/twatter_auth:${VERSION}
    env_file: ./.env
    container_name: twatter_auth
    networks:
      - app_net
    ports:
      - "${AUTH_PORT}:8000"
    depends_on:
      db:
        condition: service_healthy

  pubs:
    build:
      context: .
      dockerfile: ./pubs/Dockerfile
      args:
        VERSION: ${VERSION}
    image: spanishhans/twatter_pubs:${VERSION}
    env_file: ./.env
    container_name: twatter_pubs
    networks:
      - app_net
    ports:
      - "${PUBS_PORT}:8000"
    depends_on:
      - auth
    volumes:
      - uploads_data:/app/uploads

  ints:
    build:
      context: .
      dockerfile: ./ints/Dockerfile
      args:
        VERSION: ${VERSION}
    image: spanishhans/twatter_ints:${VERSION}
    env_file: ./.env
    container_name: twatter_ints
    networks:
      - app_net
    ports:
      - "${INTS_PORT}:8000"
    depends_on:
      - auth

  pgadmin:
    image: dpage/pgadmin4
    env_file: ./.env
    container_name: twatter_pgadmin
    networks:
      - app_net
    ports:
      - "${PG_PORT}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${DB_MAIL}
      PGADMIN_DEFAULT_PASSWORD: ${DB_PASS}
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16
    env_file: ./.env
    container_name: twatter_db
    networks:
      - app_net
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgresql:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 3s
      retries: 5

networks:
  app_net:
    driver: bridge
    name: twatter_network

volumes:
  postgresql:
  pgadmin:
  uploads_data:
